<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- Licensed to the Apache Software Foundation (ASF) under one or more       -->
<!-- contributor license agreements.  See the NOTICE file distributed with    -->
<!-- this work for additional information regarding copyright ownership.      -->
<!-- The ASF licenses this file to You under the Apache License, Version 2.0  -->
<!-- (the "License"); you may not use this file except in compliance with     -->
<!-- the License.  You may obtain a copy of the License at                    -->
<!--                                                                          -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                           -->
<!--                                                                          -->
<!-- Unless required by applicable law or agreed to in writing, software      -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,        -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. -->
<!-- See the License for the specific language governing permissions and      -->
<!-- limitations under the License.                                           -->

<configuration>

  <property>
    <!-- URI of NN. Fully qualified. No IP.-->
    <name>fs.defaultFS</name>
    <value>hdfs://<%= @nameservice_id %></value>
    <description>HA-enabled logical URI NameService ID</description>
  </property>

  <!-- HDFS HA automatic failover with Zookeeper -->
  <property>
    <name>ha.zookeeper.quorum</name>
    <value><%= @hadoop_namenode_nn1 %>:2181,<%= @hadoop_namenode_nn2 %>:2181,<%= @hadoop_resourcemanager %>:2181</value>
    <description>This lists the host-port pairs running the ZooKeeper service</description>
  </property>
 
  <property>
    <name>hadoop.security.authentication</name>
    <value><%= @hadoop_security_authentication %></value>
    <description>defines the authentication mechanism
    to use within Hadoop. By default, it is set to simple, which simply trusts the
    client is who they claim to be, whereas setting it to the string kerberos enables
    Kerberos support. Setting a value of simple here disable security</description>
  </property>

<% if @hadoop_security_authentication == "kerberos" %>
  <property>
    <name>hadoop.security.authorization</name>
    <value>true</value>
  </property>
<% end %>

<% if has_variable?("hadoop_security_group_mapping") %>
  <property>
    <name>hadoop.security.group.mapping</name>
    <value><%= hadoop_security_group_mapping %></value>
  </property>
<% end %>

<% if has_variable?("hadoop_core_proxyusers") %>
<% hadoop_core_proxyusers.sort.each do |superuser, data| %>
  <property>
    <name>hadoop.proxyuser.<%= superuser %>.hosts</name>
    <value><%= data['hosts'] %></value>
  </property>
  <property>
    <name>hadoop.proxyuser.<%= superuser %>.groups</name>
    <value><%= data['groups'] %></value>
  </property>
<% end %>

<% end %>
<% if has_variable?("hadoop_snappy_codec") %>
  <property>
    <name>io.compression.codecs</name>
    <value>org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.BZip2Codec,org.apache.hadoop.io.compress.SnappyCodec</value>
  </property>
  <!-- property>
    <name>io.compression.codec.lzo.class</name>
    <value>com.hadoop.compression.lzo.LzoCodec</value>
  </property-->
<% end %>

<% if has_variable?("hadoop_config_fs_inmemory_size_mb") %>
  <property>
    <name>fs.inmemory.size.mb</name>
    <value><%= hadoop_config_fs_inmemory_size_mb %></value>
  </property>
<% end %>

<% if has_variable?("hadoop_config_io_file_buffer_size") %>
  <property>
    <name>io.file.buffer.size</name>
    <value><%= hadoop_config_io_file_buffer_size %></value>
  </property>
<% end %>

</configuration>

